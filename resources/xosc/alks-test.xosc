<?xml version="1.0" encoding="UTF-8"?>
<!-- Demonstrate and test ALKS controller -->
<!-- A white car is driving with constant speed, set by init event -->
<!-- The white car approaches a red leading car -->
<!-- The red leading car will perform some maneuvers to exercise the ACC function -->

<OpenSCENARIO>
   <FileHeader revMajor="1"
               revMinor="1"
               date="2021-08-24T10:00:00"
               description="Demonstrate ALKS controller"
               author="esmini-team"/>
   <ParameterDeclarations>
      <ParameterDeclaration name="HostVehicle" parameterType="string" value="car_white"/>
      <ParameterDeclaration name="TargetVehicle" parameterType="string" value="car_red"/>
      <ParameterDeclaration name="EgoSpeed" parameterType="double" value="190"/>
      <ParameterDeclaration name="TargetSpeed" parameterType="double" value="30"/>
      <ParameterDeclaration name="EgoS" parameterType="double" value="20"/>
      <ParameterDeclaration name="TargetS" parameterType="double" value="100"/>
      <ParameterDeclaration name="LaneChange1Time" parameterType="double" value="5"/>
      <ParameterDeclaration name="LaneChange2Time" parameterType="double" value="7"/>
      <ParameterDeclaration name="BrakeTime" parameterType="double" value="11"/>
      <ParameterDeclaration name="AccelerateTime" parameterType="double" value="17"/>
      <ParameterDeclaration name="Brake2Time" parameterType="double" value="20"/>
   </ParameterDeclarations>
   <CatalogLocations>
      <VehicleCatalog>
         <Directory path="../xosc/Catalogs/Vehicles"/>
      </VehicleCatalog>
      <ControllerCatalog>
	     <Directory path="../xosc/Catalogs/Controllers"/>
	  </ControllerCatalog>
   </CatalogLocations>
   <RoadNetwork>
      <LogicFile filepath="../xodr/curve_r100.xodr"/>
      <SceneGraphFile filepath="../models/curve_r100.osgb"/>
   </RoadNetwork>
   <Entities>
      <ScenarioObject name="Ego">
        <CatalogReference catalogName="VehicleCatalog" entryName="$HostVehicle"/>
         <ObjectController>
            <Controller name="ECE_ALKS_DRIVER_Controller" />
         </ObjectController>         
      </ScenarioObject>
      <ScenarioObject name="Target">
         <CatalogReference catalogName="VehicleCatalog" entryName="$TargetVehicle"/>
        <!-- <ObjectController> -->
            <!-- <CatalogReference catalogName="ControllerCatalog" entryName="interactiveDriver" /> -->
        <!-- </ObjectController>          -->
      </ScenarioObject>
   </Entities>
   <Storyboard>
      <Init>
         <Actions>
            <Private entityRef="Ego">
               <PrivateAction>
                  <TeleportAction>
                     <Position>
                        <LanePosition roadId="0" laneId="-1" offset="0" s="$EgoS"/>
                     </Position>
                  </TeleportAction>
               </PrivateAction>
               <PrivateAction>
                    <ActivateControllerAction longitudinal="true" lateral="false" />
               </PrivateAction>
               <PrivateAction>
                  <LongitudinalAction>
                     <SpeedAction>
                        <SpeedActionDynamics dynamicsShape="step" dynamicsDimension="time" value="0.0"/>
                        <SpeedActionTarget>
                           <AbsoluteTargetSpeed value="${$EgoSpeed / 3.6}"/>
                        </SpeedActionTarget>
                     </SpeedAction>
                  </LongitudinalAction>
               </PrivateAction>
            </Private>
            <Private entityRef="Target">
               <PrivateAction>
                  <TeleportAction>
                     <Position>
                        <LanePosition roadId="0" laneId="-1" offset="0" s="$TargetS"/>
                     </Position>
                  </TeleportAction>
               </PrivateAction>
               <PrivateAction>
                    <ActivateControllerAction longitudinal="true" lateral="true" />
               </PrivateAction>
               <PrivateAction>
                  <LongitudinalAction>
                     <SpeedAction>
                        <SpeedActionDynamics dynamicsShape="step" dynamicsDimension="time" value="0.0"/>
                        <SpeedActionTarget>
                           <AbsoluteTargetSpeed value="${$TargetSpeed / 3.6}"/>
                        </SpeedActionTarget>
                     </SpeedAction>
                  </LongitudinalAction>
               </PrivateAction>               
            </Private>
         </Actions>
      </Init>
      <Story name="CutInAndBrakeStory">
         <ParameterDeclarations>
            <ParameterDeclaration parameterType="string" name="owner" value="Target"/>
         </ParameterDeclarations>
         <Act name="CutInAndBrakeAct">
            <ManeuverGroup maximumExecutionCount="1" name="CutInAndBrakeSequence">
               <Actors selectTriggeringEntities="false">
                  <EntityRef entityRef="$owner"/>
               </Actors>
               <Maneuver name="LaneChangeManeuvers">
                  <Event name="LaneChange1Event" priority="overwrite">
                     <Action name="LaneChange1Action">
                        <PrivateAction>
                           <LateralAction>
                              <LaneChangeAction>
                                 <LaneChangeActionDynamics dynamicsShape="sinusoidal" value="1.5" dynamicsDimension="time"/>
                                 <LaneChangeTarget>
                                    <RelativeTargetLane entityRef="Ego" value="1"/>
                                 </LaneChangeTarget>
                              </LaneChangeAction>
                           </LateralAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="LaneChange1Condition" delay="0" conditionEdge="rising">
                             <ByValueCondition>
                                <SimulationTimeCondition value="$LaneChange1Time" rule="greaterThan"/>
                             </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="LaneChange2Event" priority="overwrite">
                     <Action name="LaneChange2Action">
                        <PrivateAction>
                           <LateralAction>
                              <LaneChangeAction>
                                 <LaneChangeActionDynamics dynamicsShape="sinusoidal" value="1.4" dynamicsDimension="time"/>
                                 <LaneChangeTarget>
                                    <RelativeTargetLane entityRef="Ego" value="0"/>
                                 </LaneChangeTarget>
                              </LaneChangeAction>
                           </LateralAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="LaneChange2Condition" delay="0" conditionEdge="rising">
                             <ByValueCondition>
                                <SimulationTimeCondition value="$LaneChange2Time" rule="greaterThan"/>
                             </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>                 
                  <Event name="TargetBrakeEvent" priority="overwrite">
                     <Action name="TargetBrakeAction">
                        <PrivateAction>
                           <LongitudinalAction>
                              <SpeedAction>
                                 <SpeedActionDynamics dynamicsShape="linear" value="-4" dynamicsDimension="rate"/>
                                 <SpeedActionTarget>
                                    <AbsoluteTargetSpeed value="0"/>
                                 </SpeedActionTarget>
                              </SpeedAction>
                           </LongitudinalAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="BrakeCondition" delay="0" conditionEdge="rising">
                             <ByValueCondition>
                                <SimulationTimeCondition value="$BrakeTime" rule="greaterThan"/>
                             </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="TargetAccelerateEvent" priority="overwrite">
                     <Action name="TargetAccelerateAction">
                        <PrivateAction>
                           <LongitudinalAction>
                              <SpeedAction>
                                 <SpeedActionDynamics dynamicsShape="linear" value="10" dynamicsDimension="rate"/>
                                 <SpeedActionTarget>
                                    <AbsoluteTargetSpeed value="50"/>
                                 </SpeedActionTarget>
                              </SpeedAction>
                           </LongitudinalAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="BrakeCondition" delay="0" conditionEdge="rising">
                             <ByValueCondition>
                                <SimulationTimeCondition value="$AccelerateTime" rule="greaterThan"/>
                             </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
                  <Event name="TargetBrake2Event" priority="overwrite">
                     <Action name="TargetBrake2Action">
                        <PrivateAction>
                           <LongitudinalAction>
                              <SpeedAction>
                                 <SpeedActionDynamics dynamicsShape="linear" value="-8" dynamicsDimension="rate"/>
                                 <SpeedActionTarget>
                                    <AbsoluteTargetSpeed value="5"/>
                                 </SpeedActionTarget>
                              </SpeedAction>
                           </LongitudinalAction>
                        </PrivateAction>
                     </Action>
                     <StartTrigger>
                        <ConditionGroup>
                           <Condition name="Brake2Condition" delay="0" conditionEdge="rising">
                             <ByValueCondition>
                                <SimulationTimeCondition value="$Brake2Time" rule="greaterThan"/>
                             </ByValueCondition>
                           </Condition>
                        </ConditionGroup>
                     </StartTrigger>
                  </Event>
               </Maneuver>
            </ManeuverGroup>
            <StartTrigger>
               <ConditionGroup>
                  <Condition name="CutInActStart" delay="0" conditionEdge="none">
                     <ByValueCondition>
                        <SimulationTimeCondition value="0" rule="greaterThan"/>
                     </ByValueCondition>
                  </Condition>
               </ConditionGroup>
            </StartTrigger>
            <StopTrigger>
                <ConditionGroup>
                   <Condition name="ActStopCondition" delay="7" conditionEdge="rising">
                      <ByValueCondition>
                         <StoryboardElementStateCondition storyboardElementType="event"
                                                          storyboardElementRef="TargetBrake2Event"
                                                          state="endTransition"/>
                      </ByValueCondition>
                   </Condition>
                </ConditionGroup>
            </StopTrigger>
         </Act>
      </Story>
      <StopTrigger/>
   </Storyboard>
</OpenSCENARIO>
